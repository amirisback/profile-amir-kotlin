apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // Declaration app name
    def nameApp = "Muhammad Faisal Amir"

    def versionPropsFile = file('version.properties')
    Properties versionProps = new Properties()

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))
    } else {
        versionProps['VERSION_CODE'] = '0'
    }

    def code = versionProps['VERSION_CODE'].toInteger()

    versionProps['VERSION_CODE'] = code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.frogobox.faisalamirprofile"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 4
        versionName "1.1.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Declaration apk / aab name
        def nameAPK = "faisal-amir"

        // Declaration apps name debug mode
        def debugAttribute = " Development"
        def nameAppDebug = nameApp + debugAttribute

        setProperty("archivesBaseName", nameAPK + versionName + "#" + code + "-"
                + new Date().format('ddMMyy'))

        resConfigs "en", "id"
        vectorDrawables.useSupportLibrary = true

        // Inject app name for debug
        resValue "string", "app_name", nameAppDebug


    }

    signingConfigs {
        release {
            // You need to specify either an absolute path or include the
            // keystore file in the same directory as the build.gradle file.
            storeFile file("frogoboxdev.jks")
            storePassword "cronoclez"
            keyAlias "frogobox"
            keyPassword "xeonranger"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Generated Signed APK / AAB
            signingConfig signingConfigs.release

            // Inject app name for release
            resValue "string", "app_name", nameApp

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.2.0-alpha05'
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
